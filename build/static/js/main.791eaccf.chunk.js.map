{"version":3,"sources":["components/Counter/Statistics/Statistics.module.css","components/Counter/Buttons/Buttons.module.css","components/Counter/Statistics/Statistics.js","components/Counter/Buttons/Buttons.js","components/Counter/Section/Section.js","components/Counter/Notification/Notification.js","components/Counter/Counter.js","components/Contacts/Section/Section.js","components/Contacts/InputForm/InputForm.js","components/Contacts/ContactsList/ContactsList.js","components/Contacts/Filter/Filter.js","utils/localStorage.js","components/Contacts/Contacts.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","posFeedback","className","styles","satisticSection","Buttons","type","onIncrementStatistick","buttonSection","name","onClick","Section","children","Notification","message","Counter","state","notifocations","hendelIncrementStatistick","target","setState","props","step","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","InputForm","userName","userPhone","handleChange","e","value","hendleSubmit","preventDefault","onAddContacts","onSubmit","onChange","ContactList","contacts","ondeleteContact","length","map","id","key","Filter","onChangeFilter","placeholder","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","stringify","setItem","Contacts","filter","addContacts","newContacts","find","item","toLowerCase","alert","contactToAdd","shortid","generate","deleteContact","contact","log","changeFilte","contactsFromLS","localStorageLoader","prevProps","prevState","filteredTasks","includes","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.791eaccf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"satisticSection\":\"Statistics_satisticSection__xMUDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonSection\":\"Buttons_buttonSection__39h9L\"};","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, posFeedback }) => (\r\n  <Fragment>\r\n    <h2> Statistics </h2>\r\n    <ul className={styles.satisticSection}>\r\n      <li> Good: {good} </li> <li> Neutral: {neutral} </li>\r\n      <li> Bad: {bad} </li> <li> Total: {total} </li>\r\n      <li> Positive Feedback: {posFeedback} % </li>\r\n    </ul>\r\n  </Fragment>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  posFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styles from './Buttons.module.css';\r\n\r\nconst Buttons = ({ type, onIncrementStatistick }) => (\r\n  <div className={styles.buttonSection}>\r\n    <button type={type} name=\"good\" onClick={onIncrementStatistick}>\r\n      Goog\r\n    </button>\r\n    <button type={type} name=\"neutral\" onClick={onIncrementStatistick}>\r\n      Neutral\r\n    </button>\r\n    <button type={type} name=\"bad\" onClick={onIncrementStatistick}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => (\r\n  <div>\r\n    <h2> Please leave feedback </h2> {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <Fragment>\r\n    <h2> Statistics </h2>\r\n    <div>\r\n      <span> {message} </span>\r\n    </div>\r\n  </Fragment>\r\n);\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Buttons from './Buttons/Buttons';\r\nimport Section from './Section/Section';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class Counter extends Component {\r\n  static defaultProps = {\r\n    step: 1,\r\n    message: 'No feedback given',\r\n  };\r\n\r\n  static propTypes = {\r\n    step: PropTypes.number.isRequired,\r\n    message: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    posFeedback: 0,\r\n    notifocations: false,\r\n  };\r\n\r\n  hendelIncrementStatistick = ({ target }) => {\r\n    const { name } = target;\r\n    this.setState(state => ({\r\n      [name]: state[name] + this.props.step,\r\n    }));\r\n    this.setState(state => ({\r\n      notifocations: true,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage(name);\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    this.setState(state => ({\r\n      total: state.good + state.neutral + state.bad,\r\n    }));\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(state => ({\r\n      posFeedback: Math.round((state.good / state.total) * 100),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Section>\r\n        <Buttons\r\n          type=\"button\"\r\n          onIncrementStatistick={this.hendelIncrementStatistick}\r\n        />\r\n        {this.state.notifocations ? (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.state.total}\r\n            posFeedback={this.state.posFeedback}\r\n          />\r\n        ) : (\r\n          <Notification message={this.props.message} />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => (\r\n  <Fragment>\r\n    <div>{children}</div>\r\n  </Fragment>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class InputForm extends Component {\r\n  static propTypes = {\r\n    onAddContacts: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    userName: '',\r\n    userPhone: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContacts({\r\n      ...this.state,\r\n    });\r\n\r\n    this.setState({\r\n      userName: '',\r\n      userPhone: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3> Name </h3>\r\n        <form onSubmit={this.hendleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n          />\r\n          <h3> Number </h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userPhone\"\r\n            value={this.state.userPhone}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\"> Add contact </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, ondeleteContact }) =>\r\n  contacts.length > 0 ? (\r\n    <ul>\r\n      {contacts.map(({ userName, userPhone, id }) => (\r\n        <li key={id}>\r\n          <span>\r\n            {userName}: {userPhone}\r\n          </span>\r\n          <button type=\"button\" onClick={() => ondeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <h3>You don`t have any contacts</h3>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      userName: PropTypes.string.isRequired,\r\n      userPhone: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  ondeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div>\r\n    <span> Find contacts by name </span>\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n      placeholder=\"Type to filter tasks...\"\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","const load = key => {\r\n    try {\r\n        const serializedState = localStorage.getItem(key);\r\n\r\n        return serializedState === null ? undefined : JSON.parse(serializedState);\r\n    } catch (err) {\r\n        console.error('Get state error: ', err);\r\n    }\r\n};\r\n\r\nconst save = (key, value) => {\r\n    try {\r\n        const serializedState = JSON.stringify(value);\r\n        localStorage.setItem(key, serializedState);\r\n    } catch (err) {\r\n        console.error('Set state error: ', err);\r\n    }\r\n};\r\n\r\nexport default {\r\n    load,\r\n    save\r\n};","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Section from './Section/Section';\r\nimport InputForm from './InputForm/InputForm';\r\nimport shortid from 'shortid';\r\nimport ContactList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport localStorageLoader from '../../utils/localStorage';\r\n\r\nconst taskFilte = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.userName.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default class Contacts extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsFromLS = localStorageLoader.load('contacts');\r\n    if (contactsFromLS) {\r\n      this.setState({\r\n        contacts: contactsFromLS,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts)\r\n      localStorageLoader.save('contacts', this.state.contacts);\r\n  }\r\n\r\n  addContacts = newContacts => {\r\n    if (\r\n      this.state.contacts.find(\r\n        item =>\r\n          item.userName.toLowerCase() === newContacts.userName.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${newContacts.userName} is already in contact!`);\r\n      return;\r\n    }\r\n\r\n    const contactToAdd = {\r\n      ...newContacts,\r\n      id: shortid.generate(),\r\n    };\r\n    this.setState(state => ({\r\n      contacts: [...state.contacts, contactToAdd],\r\n    }));\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n    console.log('sadsa');\r\n  };\r\n  changeFilte = e => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const filteredTasks = taskFilte(this.state.contacts, this.state.filter);\r\n    return (\r\n      <Section>\r\n        <h1> Phonebook </h1>\r\n        <InputForm onAddContacts={this.addContacts}> </InputForm>\r\n        <h2> Contacts </h2>\r\n        <Filter value={this.state.filter} onChangeFilter={this.changeFilte} />\r\n        <ContactList\r\n          contacts={\r\n            this.state.contacts.length > 2 ? filteredTasks : this.state.contacts\r\n          }\r\n          ondeleteContact={this.deleteContact}\r\n        ></ContactList>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport 'normalize.css';\r\nimport Counter from './Counter/Counter';\r\nimport Contacts from './Contacts/Contacts';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <Counter />\r\n    <Contacts />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}